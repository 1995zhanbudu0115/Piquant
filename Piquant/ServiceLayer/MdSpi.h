#ifndef _MD_SPI_H_
#define _MD_SPI_H_
#include "../../sdk/ThostFtdcMdApi.h"
#include "ServerInfo.h"

//行情响应
class CMdSpi : public CThostFtdcMdSpi
{
public:
	///错误应答
	virtual void OnRspError(CThostFtdcRspInfoField *pRspInfo,int nRequestID, bool bIsLast);

	///当客户端与交易后台通信连接断开时，该方法被调用。当发生这个情况后，API会自动重新连接，客户端可不做处理。
	///@param nReason 错误原因
	///        0x1001 网络读失败
	///        0x1002 网络写失败
	///        0x2001 接收心跳超时
	///        0x2002 发送心跳失败
	///        0x2003 收到错误报文
	virtual void OnFrontDisconnected(int nReason);
		
	///心跳超时警告。当长时间未收到报文时，该方法被调用。
	///@param nTimeLapse 距离上次接收报文的时间
	virtual void OnHeartBeatWarning(int nTimeLapse);

	///当客户端与交易后台建立起通信连接时（还未登录前），该方法被调用。
	virtual void OnFrontConnected();
	
	///登录请求响应
	virtual void OnRspUserLogin(CThostFtdcRspUserLoginField *pRspUserLogin,	CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);

	///订阅行情应答
	virtual void OnRspSubMarketData(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);

	///取消订阅行情应答
	virtual void OnRspUnSubMarketData(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);

	///深度行情通知
	virtual void OnRtnDepthMarketData(CThostFtdcDepthMarketDataField *pDepthMarketData);

	//登出回调
	virtual void OnRspUserLogout(CThostFtdcUserLogoutField *pUserLogout, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);

public:
	CMdSpi();
	~CMdSpi();
	void Init(const ServerInfo& info);
	bool Login(const string& username,const string& password);
	void SubscribeMarketData(const vector<string>& instruments);
	void UnSubscribeMarketData(const vector<string>& instruments);

private:
	void ReqUserLogin();

public:
	CThostFtdcMdApi* GetMdApi(){ return m_pMarketApi; }	//通过m_pMarketApi来实现CTP主动函数的调用
	bool IsErrorRspInfo(CThostFtdcRspInfoField *pRspInfo);

protected:
	CThostFtdcMdApi* m_pMarketApi;
	bool m_bInited;
	ServerInfo m_BrokerInfo;
	string username;
	string password;
	int m_iReqestID;
};
#endif